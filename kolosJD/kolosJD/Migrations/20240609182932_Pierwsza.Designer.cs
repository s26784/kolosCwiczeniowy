// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kolosJD.Context;

#nullable disable

namespace kolosJD.Migrations
{
    [DbContext(typeof(WytworniaMuzycznaDbContext))]
    [Migration("20240609182932_Pierwsza")]
    partial class Pierwsza
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kolosJD.Entities.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"));

                    b.Property<DateTime>("DataWydania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdWytwornia")
                        .HasColumnType("int");

                    b.Property<string>("NazwaAlbumu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAlbum")
                        .HasName("Album_pk");

                    b.HasIndex("IdWytwornia");

                    b.ToTable("Album", (string)null);

                    b.HasData(
                        new
                        {
                            IdAlbum = 1,
                            DataWydania = new DateTime(2002, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdWytwornia = 1,
                            NazwaAlbumu = "To od Gangu Albanii"
                        },
                        new
                        {
                            IdAlbum = 2,
                            DataWydania = new DateTime(2020, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdWytwornia = 1,
                            NazwaAlbumu = "Cos tam"
                        });
                });

            modelBuilder.Entity("kolosJD.Entities.Muzyk", b =>
                {
                    b.Property<int>("IdMuzyk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMuzyk"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Pseudonim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMuzyk")
                        .HasName("Muzyk_pk");

                    b.ToTable("Muzyk", (string)null);

                    b.HasData(
                        new
                        {
                            IdMuzyk = 1,
                            Imie = "Tomasz",
                            Nazwisko = "Malaka",
                            Pseudonim = "MalaczekUwU"
                        },
                        new
                        {
                            IdMuzyk = 2,
                            Imie = "Leokadia",
                            Nazwisko = "Mloda",
                            Pseudonim = "Leosia"
                        });
                });

            modelBuilder.Entity("kolosJD.Entities.Utwor", b =>
                {
                    b.Property<int>("IdUtwor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtwor"));

                    b.Property<float>("CzasTrwania")
                        .HasColumnType("real");

                    b.Property<int?>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("NazwaUtworu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUtwor")
                        .HasName("Utwor_pk");

                    b.HasIndex("IdAlbum");

                    b.ToTable("Utwor", (string)null);

                    b.HasData(
                        new
                        {
                            IdUtwor = 1,
                            CzasTrwania = 2.54f,
                            NazwaUtworu = "BFF"
                        },
                        new
                        {
                            IdUtwor = 2,
                            CzasTrwania = 6.9f,
                            NazwaUtworu = "Lato"
                        });
                });

            modelBuilder.Entity("kolosJD.Entities.WykonawcaUtworu", b =>
                {
                    b.Property<int>("IdMuzyk")
                        .HasColumnType("int");

                    b.Property<int>("IdUtwor")
                        .HasColumnType("int");

                    b.HasKey("IdMuzyk", "IdUtwor")
                        .HasName("Muzyk_Utwor_pk");

                    b.HasIndex("IdUtwor");

                    b.ToTable("WykonawcaUtworu", (string)null);

                    b.HasData(
                        new
                        {
                            IdMuzyk = 1,
                            IdUtwor = 2
                        },
                        new
                        {
                            IdMuzyk = 2,
                            IdUtwor = 1
                        });
                });

            modelBuilder.Entity("kolosJD.Entities.Wytwornia", b =>
                {
                    b.Property<int>("IdWytwornia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWytwornia"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdWytwornia")
                        .HasName("Wytwornia_pk");

                    b.ToTable("Wytwornia", (string)null);

                    b.HasData(
                        new
                        {
                            IdWytwornia = 1,
                            Nazwa = "Fajna"
                        },
                        new
                        {
                            IdWytwornia = 2,
                            Nazwa = "Niefajna"
                        });
                });

            modelBuilder.Entity("kolosJD.Entities.Album", b =>
                {
                    b.HasOne("kolosJD.Entities.Wytwornia", "Wytwornia")
                        .WithMany("Albumy")
                        .HasForeignKey("IdWytwornia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Album_Wytwornia_pk");

                    b.Navigation("Wytwornia");
                });

            modelBuilder.Entity("kolosJD.Entities.Utwor", b =>
                {
                    b.HasOne("kolosJD.Entities.Album", "Album")
                        .WithMany("Utwory")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("Utwor_Album");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("kolosJD.Entities.WykonawcaUtworu", b =>
                {
                    b.HasOne("kolosJD.Entities.Muzyk", "Muzyk")
                        .WithMany("WykonawcyUtworow")
                        .HasForeignKey("IdMuzyk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("kolosJD.Entities.Utwor", "Utwor")
                        .WithMany("WykonawcyUtworow")
                        .HasForeignKey("IdUtwor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Muzyk");

                    b.Navigation("Utwor");
                });

            modelBuilder.Entity("kolosJD.Entities.Album", b =>
                {
                    b.Navigation("Utwory");
                });

            modelBuilder.Entity("kolosJD.Entities.Muzyk", b =>
                {
                    b.Navigation("WykonawcyUtworow");
                });

            modelBuilder.Entity("kolosJD.Entities.Utwor", b =>
                {
                    b.Navigation("WykonawcyUtworow");
                });

            modelBuilder.Entity("kolosJD.Entities.Wytwornia", b =>
                {
                    b.Navigation("Albumy");
                });
#pragma warning restore 612, 618
        }
    }
}
